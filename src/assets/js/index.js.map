{"version":3,"file":"index.js","mappings":"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","sources":["webpack://Core/./js/field.js","webpack://Core/external window [\"wp\",\"api\"]","webpack://Core/external window [\"wp\",\"components\"]","webpack://Core/external window [\"wp\",\"data\"]","webpack://Core/external window [\"wp\",\"element\"]","webpack://Core/external window [\"wp\",\"i18n\"]","webpack://Core/external window [\"wp\",\"notices\"]","webpack://Core/webpack/bootstrap","webpack://Core/webpack/runtime/compat get default export","webpack://Core/webpack/runtime/define property getters","webpack://Core/webpack/runtime/hasOwnProperty shorthand","webpack://Core/webpack/runtime/make namespace object","webpack://Core/./js/index.js"],"sourcesContent":["import { Button, Icon, Panel, PanelBody, PanelRow, Placeholder, SelectControl, Spinner, TextControl, ToggleControl } from '@wordpress/components'\nimport { Fragment, render, Component } from '@wordpress/element'\nimport { __ } from '@wordpress/i18n'\n\nexport const Field = ( { field } ) => {\n\treturn (\n\t\t<TextControl\n\t\t\thelp={ field.setting_help }\n\t\t\tlabel={ field.setting_label }\n\t\t\tonChange={ ( field ) => this.setState( [field.slug] ) }\n\t\t\tvalue={ this.state[field.slug] }\n\t\t/>\n\t)\n}","module.exports = window[\"wp\"][\"api\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"notices\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import api from '@wordpress/api'\nimport { Button, Icon, Panel, PanelBody, PanelRow, Placeholder, SelectControl, Spinner, TextControl, ToggleControl } from '@wordpress/components'\nimport { dispatch, useDispatch, useSelect } from '@wordpress/data'\nimport { Fragment, render, Component } from '@wordpress/element'\nimport { __ } from '@wordpress/i18n'\nimport { store as noticesStore } from '@wordpress/notices'\nimport { Field } from './field.js'\n\nconsole.log(settingsBlock);\nconst Notices = () => {\n    const notices = useSelect(\n        ( select ) =>\n            select( noticesStore )\n                .getNotices()\n                .filter( ( notice ) => notice.type === 'snackbar' ),\n        []\n    );\n    const { removeNotice } = useDispatch( noticesStore );\n    return (\n        <SnackbarList\n            className=\"edit-site-notices\"\n            notices={ notices }\n            onRemove={ removeNotice }\n        />\n    )\n}\n\nclass App extends Component {\n    constructor() {\n        super( ...arguments )\n\n\t\tthis.state = {}\n\n\t\tsettingsBlock.forEach( field => {\n\t\t\tthis.state[field.slug] = ''\n\t\t} )\n\n\t\tthis.state['isAPILoaded'] = false\n    }\n\n\tcomponentDidMount() {\n\n        api.loadPromise.then( () => {\n            this.settings = new api.models.Settings()\n\n            const { isAPILoaded } = this.state\n\n            if ( isAPILoaded === false ) {\n                this.settings.fetch().then( ( response ) => {\n\t\t\t\t\tconsole.log(response)\n\t\t\t\t\tsettingsBlock.forEach( field => {\n\t\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\t\t[field.slug]: response[ field.slug ],\n\t\t\t\t\t\t} )\n\t\t\t\t\t} )\n\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\t['isAPILoaded']: true\n\t\t\t\t\t} )\n                } )\n            }\n        } )\n    }\n\n    render() {\n\t\tif ( ! this.state.isAPILoaded ) {\n            return (\n                <Placeholder>\n                    <Spinner />\n                </Placeholder>\n            )\n        } \n\n        return (\n            <>\n\t\t\t\t{ settingsBlock.map( ( data, field ) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TextControl key={field}\n\t\t\t\t\t\t\t\thelp={ data.setting_help }\n\t\t\t\t\t\t\t\tlabel={ data.setting_label }\n\t\t\t\t\t\t\t\tvalue={ this.state[data.slug] || '' }\n\t\t\t\t\t\t\t\tonChange={ ( value ) => this.setState( { [data.slug]: value } ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t} ) }\n\n\n\t\t\t\t<Button\n\t\t\t\t\tisPrimary\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tconsole.log('CLIC')\n\t\t\t\t\t\tconst values = {}\n\n\t\t\t\t\t\tsettingsBlock.forEach( field => {\n\t\t\t\t\t\t\tvalues[field.slug] = this.state[field.slug]\n\t\t\t\t\t\t} )\n\t\t\t\t\t\tconsole.log(values)\n\t\t\t\t\t\tconst settings = new api.models.Settings( values )\n\t\t\t\t\t\tconsole.log(settings)\n\t\t\t\t\t\tsettings.save()\n\n\t\t\t\t\t\tdispatch('core/notices').createNotice(\n\t\t\t\t\t\t\t'success',\n\t\t\t\t\t\t\t__( 'Settings Saved', 'webaxones-core' ),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\t\t\tisDismissible: true,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Save', 'webaxones-core' ) }\n\t\t\t\t</Button>\n\t\t\t</>\n        )\n    }\n}\n\ndocument.addEventListener( 'DOMContentLoaded', () => {\n    const htmlOutput = document.getElementById( 'wax-company-settings__content' )\n    if ( htmlOutput ) {\n        render(\n            <App />,\n            htmlOutput\n        );\n    }\n});\n"],"names":["Button","Icon","Panel","PanelBody","PanelRow","Placeholder","SelectControl","Spinner","TextControl","ToggleControl","Fragment","render","Component","__","Field","field","setting_help","setting_label","setState","slug","state","api","dispatch","useDispatch","useSelect","store","noticesStore","console","log","settingsBlock","Notices","notices","select","getNotices","filter","notice","type","removeNotice","App","constructor","arguments","forEach","componentDidMount","loadPromise","then","settings","models","Settings","isAPILoaded","fetch","response","map","data","value","values","save","createNotice","isDismissible","document","addEventListener","htmlOutput","getElementById"],"sourceRoot":""}