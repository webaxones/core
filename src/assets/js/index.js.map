{"version":3,"file":"index.js","mappings":"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","sources":["webpack://Core/./js/field.js","webpack://Core/external window [\"wp\",\"api\"]","webpack://Core/external window [\"wp\",\"components\"]","webpack://Core/external window [\"wp\",\"data\"]","webpack://Core/external window [\"wp\",\"element\"]","webpack://Core/external window [\"wp\",\"i18n\"]","webpack://Core/external window [\"wp\",\"notices\"]","webpack://Core/webpack/bootstrap","webpack://Core/webpack/runtime/compat get default export","webpack://Core/webpack/runtime/define property getters","webpack://Core/webpack/runtime/hasOwnProperty shorthand","webpack://Core/webpack/runtime/make namespace object","webpack://Core/./js/index.js"],"sourcesContent":["import { Button, Icon, Panel, PanelBody, PanelRow, Placeholder, SelectControl, Spinner, TextControl, ToggleControl } from '@wordpress/components'\nimport { Fragment, render, Component } from '@wordpress/element'\nimport { __ } from '@wordpress/i18n'\n\nexport const Field = ( { field } ) => {\n\treturn (\n\t\t<TextControl\n\t\t\thelp={ field.setting_help }\n\t\t\tlabel={ field.setting_label }\n\t\t\tonChange={ ( field ) => this.setState( [field.slug] ) }\n\t\t\tvalue={ this.state[field.slug] }\n\t\t/>\n\t)\n}","module.exports = window[\"wp\"][\"api\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"notices\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import api from '@wordpress/api'\nimport { Button, Icon, Panel, PanelBody, PanelRow, Placeholder, SelectControl, Spinner, TextControl, ToggleControl, SnackbarList } from '@wordpress/components'\nimport { dispatch, useDispatch, useSelect } from '@wordpress/data'\nimport { Fragment, render, Component } from '@wordpress/element'\nimport { __ } from '@wordpress/i18n'\nimport { store as noticesStore } from '@wordpress/notices'\nimport { Field } from './field.js'\n\nconst Notices = () => {\n    const notices = useSelect(\n        ( select ) =>\n            select( noticesStore )\n                .getNotices()\n                .filter( ( notice ) => notice.type === 'snackbar' ),\n        []\n    );\n    const { removeNotice } = useDispatch( noticesStore );\n    return (\n        <SnackbarList\n            className=\"edit-site-notices\"\n            notices={ notices }\n            onRemove={ removeNotice }\n        />\n    )\n}\n\nclass App extends Component {\n    constructor() {\n        super( ...arguments )\n\n\t\tthis.state = {}\n\n\t\tthis.state['fields'] = []\n\n\t\tsettingsGroup.fields.forEach( field => {\n\t\t\tthis.state['fields'][field.slug] = ''\n\t\t} )\n\n\t\tthis.state['isAPILoaded'] = false\n\t\tconsole.log(this.state)\n    }\n\n\tcomponentDidMount() {\n\n        api.loadPromise.then( () => {\n            this.settings = new api.models.Settings()\n\n            const { isAPILoaded } = this.state\n\n            if ( isAPILoaded === false ) {\n                this.settings.fetch().then( ( response ) => {\n\t\t\t\t\tconsole.log(response)\n\t\t\t\t\tsettingsGroup.fields.forEach( field => {\n\t\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\t\t[field.slug]: response[ field.slug ],\n\t\t\t\t\t\t} )\n\t\t\t\t\t} )\n\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\t['isAPILoaded']: true\n\t\t\t\t\t} )\n                } )\n            }\n        } )\n    }\n\n    render() {\n\t\tif ( ! this.state.isAPILoaded ) {\n            return (\n                <Placeholder>\n                    <Spinner />\n                </Placeholder>\n            )\n        } \n\n        return (\n            <>\n\t\t\t\t{ settingsGroup.fields.map( field => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TextControl key={ field.slug }\n\t\t\t\t\t\t\t\thelp={ field.labels.help }\n\t\t\t\t\t\t\t\tlabel={ field.labels.label }\n\t\t\t\t\t\t\t\tvalue={ this.state[field.slug] || '' }\n\t\t\t\t\t\t\t\tonChange={ value => this.setState( { [field.slug] : value } ) }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t} ) }\n\n\n\t\t\t\t<Button\n\t\t\t\t\tisPrimary\n\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\tconst values = {}\n\n\t\t\t\t\t\tsettingsGroup.fields.forEach( field => {\n\t\t\t\t\t\t\tvalues[field.slug] = this.state[field.slug]\n\t\t\t\t\t\t} )\n\n\t\t\t\t\t\tconst settings = new api.models.Settings( values )\n\n\t\t\t\t\t\tsettings.save()\n\n\t\t\t\t\t\tdispatch('core/notices').createNotice(\n\t\t\t\t\t\t\t'success',\n\t\t\t\t\t\t\t__( 'Settings Saved', 'webaxones-core' ),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\t\t\t\tisDismissible: true,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{ __( 'Save', 'webaxones-core' ) }\n\t\t\t\t</Button>\n\n\t\t\t\t<div className=\"wax-company-settings____notices\">\n                    <Notices/>\n                </div>\n\t\t\t</>\n        )\n    }\n}\n\ndocument.addEventListener( 'DOMContentLoaded', () => {\n    const htmlOutput = document.getElementById( 'wax-company-settings__content' )\n    if ( htmlOutput ) {\n        render(\n            <App />,\n            htmlOutput\n        );\n    }\n});\n"],"names":["Button","Icon","Panel","PanelBody","PanelRow","Placeholder","SelectControl","Spinner","TextControl","ToggleControl","Fragment","render","Component","__","Field","field","setting_help","setting_label","setState","slug","state","api","SnackbarList","dispatch","useDispatch","useSelect","store","noticesStore","Notices","notices","select","getNotices","filter","notice","type","removeNotice","App","constructor","arguments","settingsGroup","fields","forEach","console","log","componentDidMount","loadPromise","then","settings","models","Settings","isAPILoaded","fetch","response","map","labels","help","label","value","values","save","createNotice","isDismissible","document","addEventListener","htmlOutput","getElementById"],"sourceRoot":""}